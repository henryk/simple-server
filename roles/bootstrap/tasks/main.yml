- name: Bootstrap Python support on the host
  raw:  'apt-get update ; apt-get --no-install-recommends -yq install python python-apt'

- name: Gather facts
  setup:

- name: Make sure essential software is installed
  package:
    name: '{{ item }}'
    state: 'present'
  with_items:
    - 'python-pip'
    - 'lsb-release'
    - 'aptitude'
    - 'unattended-upgrades'

- name: Save hostname and domain in /etc/hosts
  lineinfile:
    state: 'present'
    dest: '/etc/hosts'
    insertafter: '^127\.0\.0\.1'
    regexp: '^127\.0\.1\.1'
    line: '127.0.1.1 {{ hostname }} {{ hostname.split(".")[0] }}'

- name: Record hostname and domain in /etc/hostname
  copy:
    content: '{{ hostname }}'
    dest: '/etc/hostname'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: reboot for bootstrap

- name: Create swapfile
  command: "dd if=/dev/zero of={{ swap_path }} bs=1M count={{ swap_size_mb }} creates={{ swap_path }}"
  register: write_swapfile
  when: (ansible_memory_mb.real.total+ansible_memory_mb.swap.total < min_memory_mb)

- name: Set swapfile permissions
  file: path="{{ swap_path }}" mode=600
  when: (ansible_memory_mb.real.total+ansible_memory_mb.swap.total < min_memory_mb)

- name: Build swapfile
  command: "mkswap {{ swap_path }}"
  register: create_swapfile
  when: (ansible_memory_mb.real.total+ansible_memory_mb.swap.total < min_memory_mb) and write_swapfile.changed

- name: Enable swapfile
  command: "swapon {{ swap_path }}"
  when: (ansible_memory_mb.real.total+ansible_memory_mb.swap.total < min_memory_mb) and create_swapfile.changed

- name: Add swapfile to /etc/fstab
  lineinfile: dest=/etc/fstab line="{{ swap_path }}   none    swap    sw    0   0" state=present
  notify: reboot for bootstrap
  when: (ansible_memory_mb.real.total+ansible_memory_mb.swap.total < min_memory_mb)
